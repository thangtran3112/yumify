/**
 * Generated by Copilot
 * @name Recipe
 */

// Comment type
export interface IComment {
    commentId: string;
    userId: string;
    text: string;
    timestamp: string;
}

// Chapter type
export interface IChapter {
    chapterId: string;
    type: 'Text' | 'Quiz' | 'Video';
    title: string;
    content: string;
    comments: IComment[];
    video?: string;
}

// Section type
export interface ISection {
    sectionId: string;
    sectionTitle: string;
    sectionDescription?: string;
    chapters: IChapter[];
}

// Enrollment type
export interface IEnrollment {
    userId: string;
}

// Recipe type
export interface IRecipe {
    recipeId: string;
    teacherId: string;
    teacherName: string;
    title: string;
    description?: string;
    category: string;
    image?: string;
    price?: number;
    level: 'Beginner' | 'Intermediate' | 'Advanced';
    status: 'Draft' | 'Published';
    sections: ISection[];
    enrollments: IEnrollment[];
    createdAt?: Date; // From timestamps: true
    updatedAt?: Date; // From timestamps: true
}

// Create/Update recipe request body type
export interface IRecipeInput extends Omit<IRecipe, 'recipeId' | 'createdAt' | 'updatedAt'> {
    recipeId?: string; // Optional for creation, required for updates
}

// Recipe query params types
export interface IRecipeQueryParams {
    teacherId?: string;
    category?: string;
    level?: 'Beginner' | 'Intermediate' | 'Advanced';
    status?: 'Draft' | 'Published';
    priceMin?: number;
    priceMax?: number;
}